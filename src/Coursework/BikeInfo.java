/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Coursework;

/**
 *
 * @author acer
 */

import java.awt.Desktop;
import java.io.*;
import java.util.ArrayList;
import javax.swing.*;
import java.util.logging.*;
public class BikeInfo extends javax.swing.JFrame {
    int global;
    int [] globalarray;
    int gibi=0;
    /**
     * Creates new form BikeInfo
     */
    public BikeInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        bikeIS = new javax.swing.JLabel();
        bikeIDlbl = new javax.swing.JLabel();
        brandNamelbl = new javax.swing.JLabel();
        engineDisplacementlbl = new javax.swing.JLabel();
        colourlbl = new javax.swing.JLabel();
        bikeCategorylbl = new javax.swing.JLabel();
        weightlbl = new javax.swing.JLabel();
        pricelbl = new javax.swing.JLabel();
        priceRangelbl = new javax.swing.JLabel();
        bikeIDtxt = new javax.swing.JTextField();
        brandNametxt = new javax.swing.JTextField();
        bikeCategorycb = new javax.swing.JComboBox<>();
        addbut = new javax.swing.JButton();
        clearbut = new javax.swing.JButton();
        pricetxt = new javax.swing.JTextField();
        engineDisplacementtxt = new javax.swing.JTextField();
        weighttxt = new javax.swing.JTextField();
        blackrb = new javax.swing.JRadioButton();
        whiterb = new javax.swing.JRadioButton();
        bluerb = new javax.swing.JRadioButton();
        redrb = new javax.swing.JRadioButton();
        lowcc = new javax.swing.JCheckBox();
        mediumcc = new javax.swing.JCheckBox();
        highcc = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tableCategorycb = new javax.swing.JComboBox<>();
        tablePricetxt = new javax.swing.JTextField();
        bikeCategorybut = new javax.swing.JButton();
        pricebut = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bikeIS.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        bikeIS.setText("Bikes Information System");

        bikeIDlbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        bikeIDlbl.setText("Bike ID");

        brandNamelbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        brandNamelbl.setText("Brand Name");

        engineDisplacementlbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        engineDisplacementlbl.setText("Engine Displacement");

        colourlbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        colourlbl.setText("Colour");

        bikeCategorylbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        bikeCategorylbl.setText("Bike Category");

        weightlbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        weightlbl.setText("Weight(in kg)");

        pricelbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        pricelbl.setText("Price(in Rs.)");

        priceRangelbl.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        priceRangelbl.setText("Price Range");

        bikeCategorycb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Category-", "Sports", "Offroad", "Cruiser", "Naked" }));

        addbut.setBackground(new java.awt.Color(255, 204, 255));
        addbut.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        addbut.setText("Add");
        addbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbutActionPerformed(evt);
            }
        });

        clearbut.setBackground(new java.awt.Color(255, 204, 255));
        clearbut.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        clearbut.setText("Clear");
        clearbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbutActionPerformed(evt);
            }
        });

        blackrb.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(blackrb);
        blackrb.setText("Black");

        whiterb.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(whiterb);
        whiterb.setText("White");

        bluerb.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(bluerb);
        bluerb.setText("Blue");

        redrb.setBackground(new java.awt.Color(204, 255, 204));
        buttonGroup1.add(redrb);
        redrb.setText("Red");

        lowcc.setBackground(new java.awt.Color(204, 255, 204));
        lowcc.setText("Low");

        mediumcc.setBackground(new java.awt.Color(204, 255, 204));
        mediumcc.setText("Medium");

        highcc.setBackground(new java.awt.Color(204, 255, 204));
        highcc.setText("High");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(weightlbl)
                    .addComponent(colourlbl)
                    .addComponent(bikeIDlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceRangelbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(blackrb)
                            .addComponent(bluerb))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(whiterb)
                            .addComponent(redrb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bikeCategorylbl)
                        .addGap(18, 18, 18)
                        .addComponent(bikeCategorycb, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lowcc, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mediumcc, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pricelbl)
                        .addGap(18, 18, 18)
                        .addComponent(pricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bikeIDtxt)
                            .addComponent(weighttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(engineDisplacementlbl)
                                .addGap(18, 18, 18)
                                .addComponent(engineDisplacementtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(brandNamelbl)
                                .addGap(18, 18, 18)
                                .addComponent(brandNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(highcc, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(addbut)
                                .addGap(50, 50, 50)
                                .addComponent(clearbut)))
                        .addGap(0, 227, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bikeIS)
                .addGap(199, 199, 199))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bikeIS, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bikeCategorylbl)
                            .addComponent(bikeCategorycb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(brandNamelbl)
                            .addComponent(bikeIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bikeIDlbl)
                            .addComponent(brandNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weightlbl)
                            .addComponent(weighttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(engineDisplacementtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(engineDisplacementlbl))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(colourlbl)
                            .addComponent(blackrb)
                            .addComponent(whiterb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bluerb)
                            .addComponent(redrb))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pricelbl)
                    .addComponent(priceRangelbl)
                    .addComponent(lowcc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mediumcc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(highcc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbut)
                    .addComponent(clearbut))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jLabel1.setText("Bike Details");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "BikeID", "Brand Name", "Weight(in kg)", "Engine Displacement", "Colour", "Bike Category", "Price Range", "Price(in Rs)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        tableCategorycb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Category-", "Sports", "OffRoad", "Cruiser", "Naked" }));

        bikeCategorybut.setBackground(new java.awt.Color(255, 204, 255));
        bikeCategorybut.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        bikeCategorybut.setText("Search by Bike Category");
        bikeCategorybut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bikeCategorybutActionPerformed(evt);
            }
        });

        pricebut.setBackground(new java.awt.Color(255, 204, 255));
        pricebut.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        pricebut.setText("Search by Price");
        pricebut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pricebutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(269, 269, 269))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tableCategorycb, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bikeCategorybut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tablePricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pricebut)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableCategorycb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tablePricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bikeCategorybut)
                    .addComponent(pricebut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem3.setText("User Guide");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbutActionPerformed
        String bikeIDvar = bikeIDtxt.getText().trim();
        if (bikeIDvar.length() != 0){   
            try{
                int id = Integer.parseInt(bikeIDvar);
                if (id <= 0) {
                    JOptionPane.showMessageDialog(rootPane, "BikeID cannot be negative.", "Error", JOptionPane.ERROR_MESSAGE);
                    bikeIDtxt.setText("");
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Invalid Format in BikeID.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        String brandNamevar = brandNametxt.getText().trim();
        String weightvar = weighttxt.getText().trim();
        if (weightvar.length() != 0){   
            try{
                int id = Integer.parseInt(weightvar);
                if (id <= 0) {
                    JOptionPane.showMessageDialog(rootPane, "Weight cannot be negative.", "Error", JOptionPane.ERROR_MESSAGE);
                    weighttxt.setText("");
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Invalid Format in Weight(in kg).", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        String engineDisplacementvar = engineDisplacementtxt.getText().trim();
        String pricevar = pricetxt.getText().trim();
        if (pricevar.length() != 0){   
            try{
                int id = Integer.parseInt(pricevar);
                if (id <= 0) {
                    JOptionPane.showMessageDialog(rootPane, "Price cannot be negative.", "Error", JOptionPane.ERROR_MESSAGE);
                    pricetxt.setText("");
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Invalid Format in Price(in Rs.).", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        String intake = "";
        if (blackrb.isSelected()){
            intake = blackrb.getText();
        }
        if (whiterb.isSelected()){
            intake = whiterb.getText();
        }
        if (bluerb.isSelected()){
            intake = bluerb.getText();
        }
        if (redrb.isSelected()){
            intake = redrb.getText();
        }
        System.out.println("RadioButton Value: " + intake);
        
        String bikeCategoryvar = (String) bikeCategorycb.getSelectedItem();
        
        String priceRangevar = "";
        if (lowcc.isSelected()){
            priceRangevar = priceRangevar + lowcc.getText() + ",";
        }
        if (mediumcc.isSelected()){
            priceRangevar = priceRangevar + mediumcc.getText() + ",";
        }
        if (highcc.isSelected()){
            priceRangevar = priceRangevar + highcc.getText() + ",";
        }
        System.out.println(priceRangevar);
        if (priceRangevar.length() != 0){
            priceRangevar = priceRangevar.substring(0, priceRangevar.length() - 1);
        }
        System.out.println("Price Range: " + priceRangevar);
        
        int nextRow = 1;
        boolean empty = false ;
        String s;
        int colCount = jTable1.getColumnCount();
        
        if (!bikeIDvar.isEmpty()) {
            if (!brandNamevar.isEmpty()) {
                if (!weightvar.isEmpty()) {
                    if (!engineDisplacementvar.isEmpty()) {
                        if (!pricevar.isEmpty()) {
                            if (!intake.isEmpty()) {
                                if (bikeCategorycb.getSelectedIndex() != 0) {
                                    if (!priceRangevar.isEmpty()){
                                        String data[] = {bikeIDvar, brandNamevar, weightvar, engineDisplacementvar, intake, bikeCategoryvar, priceRangevar, pricevar};
                                        do {
                                            s = (String) jTable1.getValueAt(nextRow, 0);
                                            if (s != null && s.length() != 0) {
                                                nextRow++;
                                            } else {
                                                empty = true;
                                            }
                                        } while (!empty);
                                        for (int i = 0; i < colCount; i++) {
                                            jTable1.setValueAt(data[i], nextRow, i);
                                        }
                                        bikeIDtxt.setText("");
                                        brandNametxt.setText("");
                                        weighttxt.setText("");
                                        engineDisplacementtxt.setText("");
                                        buttonGroup1.clearSelection();
                                        bikeCategorycb.setSelectedIndex(0);
                                        lowcc.setSelected(false);
                                        mediumcc.setSelected(false);
                                        highcc.setSelected(false);
                                        pricetxt.setText("");
                                        JOptionPane.showMessageDialog(this,"The bike has been entered.");
                                    } else { 
                                        JOptionPane.showMessageDialog(this, "Price Range not selected.");}    
                                } else {
                                    JOptionPane.showMessageDialog(this, "Bike Category not selected.");}                                
                            } else {
                                JOptionPane.showMessageDialog(this, "Colour not selected.");}                            
                        } else {
                            JOptionPane.showMessageDialog(this, "Price not entered.");}                        
                    } else {
                        JOptionPane.showMessageDialog(this, "Engine Displacement not entered.");}               
                } else {
                    JOptionPane.showMessageDialog(this, "Weight not entered.");}
            } else {
                JOptionPane.showMessageDialog(this, "Brand Name not entered.");}
        } else {
            JOptionPane.showMessageDialog(this, "Bike ID not entered.");}         
    }//GEN-LAST:event_addbutActionPerformed

    private void clearbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbutActionPerformed
       bikeIDtxt.setText("");
       brandNametxt.setText("");
       weighttxt.setText("");
       engineDisplacementtxt.setText("");
       buttonGroup1.clearSelection();
       bikeCategorycb.setSelectedIndex(0);
       lowcc.setSelected(false);
       mediumcc.setSelected(false);
       highcc.setSelected(false);
       pricetxt.setText("");
    }//GEN-LAST:event_clearbutActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
     String filePath="../Bike.csv";
        try {
            if(this.gibi==0){
                int j=0;
                BufferedReader bufferreader=new BufferedReader(new FileReader(filePath));
                String line="";
                while((line=bufferreader.readLine())!=null){
                    String[] data=line.split(",");                
                    for(int i =0;i<data.length;i++){                        
                        jTable1.setValueAt(data[i], j, i);
                    }
                    j++;
                    this.gibi++;
                }   
            }else{
                JOptionPane.showMessageDialog(rootPane, "File has already been opened.", "Error", JOptionPane.ERROR_MESSAGE);
            }          
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(BikeInfo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
    
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
           File file=new File("../Help.pdf");
        try {
            Desktop.getDesktop().open(file);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "File not found");
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void pricebutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pricebutActionPerformed
        String[] a;
        int[] b;
        ArrayList<String> price = new ArrayList<String>();
        for(int i=0; i!=jTable1.getRowCount();i++){
            String c = (String)jTable1.getValueAt(i,7);
            price.add(c);
            price.remove(null);
        }
        a = price.toArray(new String[price.size()]);
        int n = a.length;
        b = new int[n];
        for(int i=0; i<n; i++){
            b[i] = Integer.parseInt(a[i]);
        }
        SelectionSort ob =new SelectionSort();
        ob.sort(b);
        BinarySearch bs = new BinarySearch();
        if(tablePricetxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Price not entered.", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            String p = tablePricetxt.getText();
            int q = Integer.parseInt(p);
            int r = b.length - 1;
            bs.binary(b,0,r,q);
            int num = b.length;
            for (int i=0;i<n;i++){
            }
            ArrayList<String> data = new ArrayList<String>();
            for (int i=0; i!=jTable1.getRowCount();i++){
                String c = (String)jTable1.getValueAt(i,7);
                data.add(c);
                data.remove(null);
            }
            a = price.toArray(new String[data.size()]);
            int numm = a.length;
            globalarray = new int[n];
            for(int i=0; i<n; i++){
                globalarray[i]=Integer.parseInt(a[i]);
            }
            String[]name;
            String[]category;
            int identifier=0;
            name=new String[jTable1.getRowCount()];
            category=new String[jTable1.getRowCount()];
            String tablePricevar=tablePricetxt.getText();
            for(int i=0; i<jTable1.getRowCount();i++){
                String x = (String)jTable1.getValueAt(i,7);
                if(tablePricevar.equals(x)){
                    String namevar = (String)jTable1.getValueAt(i,0);
                    name[i]=namevar;
                    identifier=identifier + 1;
                    break;
                }
            }
            if (identifier!=0){
                JList list = new JList(name);
                JOptionPane.showMessageDialog(rootPane,list,"Bikes with the provided price are given.",JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Bikes with the provided price are not present.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_pricebutActionPerformed

    private void bikeCategorybutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bikeCategorybutActionPerformed
        String[]bikeCategory;
        int count=0;
        bikeCategory = new String[jTable1.getRowCount()];
        String randomvar = (String)tableCategorycb.getSelectedItem();
        for(int i=0;i<jTable1.getRowCount();i++){
            if (randomvar.equals((String)jTable1.getValueAt(i,5))){
                String namevar = (String)jTable1.getValueAt(i,0);
                bikeCategory[i]=namevar;
                count=count+1;
            }
        }
        if(count!=0){
            JList list = new JList(bikeCategory);
            JOptionPane.showMessageDialog(rootPane,list,"Bikes with the provided brand are given.",JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Bikes with the provided brand are not present.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bikeCategorybutActionPerformed
public class SelectionSort{ 
    public void sort(int b[]){
        int n = b.length;
        for (int i = 0; i < n-1; i++){ 
            int z = i; 
            for (int j = i+1; j < n; j++){
                if (b[j] < b[z]){
                    z = j;
                }
            }
               int temp = b[z]; 
               b[z] = b[i];
                b[i] = temp;
        }
    }
}
public class BinarySearch{
    public void binary(int b[], int f, int l, int key){
        int mid = (f + l)/2;
        while( f <= l ){
            if ( b[mid] < key ){
                f = mid + 1;
            }else if ( b[mid] == key ){
            global = mid;
            break;
            }else{
                l = mid - 1;
            }
            mid = (f + l)/2;
        }
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BikeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BikeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BikeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BikeInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BikeInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbut;
    private javax.swing.JButton bikeCategorybut;
    private javax.swing.JComboBox<String> bikeCategorycb;
    private javax.swing.JLabel bikeCategorylbl;
    private javax.swing.JLabel bikeIDlbl;
    private javax.swing.JTextField bikeIDtxt;
    private javax.swing.JLabel bikeIS;
    private javax.swing.JRadioButton blackrb;
    private javax.swing.JRadioButton bluerb;
    private javax.swing.JLabel brandNamelbl;
    private javax.swing.JTextField brandNametxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearbut;
    private javax.swing.JLabel colourlbl;
    private javax.swing.JLabel engineDisplacementlbl;
    private javax.swing.JTextField engineDisplacementtxt;
    private javax.swing.JCheckBox highcc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JCheckBox lowcc;
    private javax.swing.JCheckBox mediumcc;
    private javax.swing.JLabel priceRangelbl;
    private javax.swing.JButton pricebut;
    private javax.swing.JLabel pricelbl;
    private javax.swing.JTextField pricetxt;
    private javax.swing.JRadioButton redrb;
    private javax.swing.JComboBox<String> tableCategorycb;
    private javax.swing.JTextField tablePricetxt;
    private javax.swing.JLabel weightlbl;
    private javax.swing.JTextField weighttxt;
    private javax.swing.JRadioButton whiterb;
    // End of variables declaration//GEN-END:variables
}
